{"version":3,"sources":["media/fonts/handFont.ttf","media/fonts/handFont2.ttf","media/fonts/handFont3.otf","media/images/RHIcon.js","components/Preloader/Preloader.js","pages/App.js","serviceWorker.js","index.js"],"names":["module","exports","RHIcon","className","version","baseProfile","xmlns","x","y","viewBox","overflow","stroke","strokeWidth","strokeMiterlimit","x1","y1","x2","y2","Preloader","Offer","lazy","Card","Apps","Form","App","fallback","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","querySelector","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.92cc1a46.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/handFont.25d5fb55.ttf\";","module.exports = __webpack_public_path__ + \"static/media/handFont2.6e5dfd5d.ttf\";","module.exports = __webpack_public_path__ + \"static/media/handFont3.8f3d822a.otf\";","import React from \"react\"\r\n\r\nconst RHIcon = ({className}) => {\r\n   return   <svg \r\n\t\t\t\tversion=\"1.2\" \r\n\t\t\t\tclassName={className}\r\n\t\t\t\tbaseProfile=\"tiny\" \r\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\tx=\"0px\" y=\"0px\" \r\n\t\t\t\tviewBox=\"0 0 566 576\" \r\n\t\t\t\toverflow=\"visible\" >\r\n\t\t\t\t<line stroke=\"#3e596c\" strokeWidth=\"40\" strokeMiterlimit=\"10\" x1=\"114.5\" y1=\"117.5\" x2=\"114.5\" y2=\"480\"/>\r\n\t\t\t\t<line stroke=\"#3e596c\" strokeWidth=\"40\" strokeMiterlimit=\"10\" x1=\"114.5\" y1=\"117.5\" x2=\"253.5\" y2=\"117.5\"/>\r\n\t\t\t\t<line stroke=\"#3e596c\" strokeWidth=\"40\" strokeMiterlimit=\"10\" x1=\"113.5\" y1=\"299.5\" x2=\"253.5\" y2=\"299.5\"/>\r\n\t\t\t\t<line stroke=\"#3e596c\" strokeWidth=\"40\" strokeMiterlimit=\"10\" x1=\"253.5\" y1=\"117.5\" x2=\"253.5\" y2=\"299.5\"/>\r\n\t\t\t\t<line stroke=\"#3e596c\" strokeWidth=\"40\" strokeMiterlimit=\"10\" x1=\"114.5\" y1=\"305.5\" x2=\"253.5\" y2=\"525.5\"/>\r\n\t\t\t\t<line stroke=\"#3e596c\" strokeWidth=\"40\" strokeMiterlimit=\"10\" x1=\"314\" y1=\"53\" x2=\"316\" y2=\"481\"/>\r\n\t\t\t\t<line stroke=\"#3e596c\" strokeWidth=\"40\" strokeMiterlimit=\"10\" x1=\"253\" y1=\"526\" x2=\"515\" y2=\"526\"/>\r\n\t\t\t\t<line stroke=\"#3e596c\" strokeWidth=\"40\" strokeMiterlimit=\"10\" x1=\"315\" y1=\"299\" x2=\"459\" y2=\"300\"/>\r\n\t\t\t\t<line stroke=\"#3e596c\" strokeWidth=\"40\" strokeMiterlimit=\"10\" x1=\"452\" y1=\"97\" x2=\"452\" y2=\"480\"/>\r\n\t\t\t\t<line stroke=\"#3e596c\" strokeWidth=\"40\" strokeMiterlimit=\"10\" x1=\"515\" y1=\"526\" x2=\"515\" y2=\"51\"/>\r\n\t\t\t\t<line stroke=\"#3e596c\" strokeWidth=\"40\" strokeMiterlimit=\"10\" x1=\"184\" y1=\"526\" x2=\"53\" y2=\"526\"/>\r\n\t\t\t\t<line stroke=\"#3e596c\" strokeWidth=\"40\" strokeMiterlimit=\"10\" x1=\"53\" y1=\"53\" x2=\"53\" y2=\"523\"/>\r\n\t\t\t\t<line stroke=\"#3e596c\" strokeWidth=\"40\" strokeMiterlimit=\"10\" x1=\"53\" y1=\"53\" x2=\"314\" y2=\"53\"/>\r\n\t\t\t\t<line stroke=\"#3e596c\" strokeWidth=\"40\" strokeMiterlimit=\"10\" x1=\"515\" y1=\"51\" x2=\"381\" y2=\"51\"/>\r\n\t\t\t</svg>\r\n}\r\n\r\nexport default RHIcon","import React from \"react\"\r\n\r\nimport RHIcon from '../../media/images/RHIcon'\r\n\r\nimport './Preloader.css'\r\n\r\nconst Preloader = () => {\r\n  \treturn \t<section className=\"main\">\r\n                <div className=\"preloader\">\r\n    \t            <div className=\"preloader__cube\">\r\n    \t            \t<RHIcon className=\"preloader__surface\" />\r\n    \t            </div>\r\n    \t\t    </div>\r\n            </section>\r\n}\r\n\r\nexport default Preloader\r\n","import React, { lazy, Suspense } from 'react'\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport './App.css'\r\n\r\nimport Preloader from '../components/Preloader/Preloader'\r\n\r\nconst Offer = lazy(() => import('./Offer/Offer'))\r\nconst Card = lazy(() => import('./Card/Card'))\r\nconst Apps = lazy(() => import('./Apps/Apps'))\r\nconst Form = lazy(() => import('./Form/Form'))\r\n// const Post = lazy(() => import('./Post/Post'))\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n        <Suspense fallback={<Preloader />}>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Card />\r\n                </Route>\r\n                <Route path=\"/offer\">\r\n                    <Offer />\r\n                </Route>\r\n                <Route path=\"/apps\">\r\n                    <Apps />\r\n                </Route>\r\n                <Route path=\"/form\">\r\n                    <Form />\r\n                </Route>\r\n                {/* <Route path=\"/posts/:slug\">\r\n                    <Post />\r\n                </Route> */}\r\n                {/* <Route path=\"/posts\">\r\n                    <Posts />\r\n                </Route> */}\r\n                {/* <Route>\r\n                    <NoPage />\r\n                </Route> */}\r\n            </Switch>\r\n        </Suspense>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport './media/fonts/handFont.ttf'\r\nimport './media/fonts/handFont2.ttf'\r\nimport './media/fonts/handFont3.otf'\r\n\r\nimport './static/variables.css'\r\nimport './index.css'\r\n\r\nimport App from './pages/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n// React.lazy(() => import('./media/fonts/handFont.ttf'))\r\n// React.lazy(() => import('./media/fonts/handFont2.ttf'))\r\n// React.lazy(() => import('./media/fonts/handFont3.otf'))\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.querySelector('.root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register()\r\n"],"sourceRoot":""}